# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- '*'

pool:
  vmImage: 'windows-latest' # O el agente adecuado para tu proyecto

variables:
  GRADLE_OPTS: '-Dorg.gradle.daemon=false' # Opciones de Gradle

steps:
- script: |
    echo 'Descargando SikuliX'
    # Agrega aquí comandos para descargar e instalar SikuliX
    java -jar path-to/sikulixide-2.0.5.jar
  displayName: 'Instalar SikuliX'

#- task: UseJavaVersion@0
#  inputs:
#    versionSpec: 'JDKVersion' # O la versión de Java que necesitas
#    addToPath: true

- script: |
    echo 'Ejecutando Gradle Build'
    ./gradlew build # Ajusta este comando según tu configuración de Gradle
  displayName: 'Ejecutar Gradle Build'

# Agrega aquí más pasos para ejecutar tus pruebas Sikuli y cualquier otro paso necesario

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit' # Ajusta esto según el formato de tus resultados
    testResultsFiles: '**/test-results/*.xml' # Ajusta la ubicación de tus resultados de pruebas

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: 'drop'