# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- '*'

pool:
  name: 'TestSIkuliX'

steps:
#- task: UseJavaVersion@0
#  inputs:
#    versionSpec: '11'  # Especifica la versión de Java que deseas usar.

#- script: 
#- task: Gradle@3
#  './gradlew build'  # Ejecuta el comando Gradle para compilar tu proyecto.
#  displayName: 'Build with Gradle'

- script: 'gradlew test' # Esto ejecutará los tests de Sikuli
  displayName: 'Run Sikuli Tests'

- task: Gradle@3
  inputs:
    workingDirectory: '$(System.DefaultWorkingDirectory)'  # Define el directorio de trabajo actual.
    gradleWrapperFile: 'gradlew.bat'
    gradleOptions: '-Xmx3072m'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'  # Ruta a los resultados de las pruebas unitarias.
    tasks: 'test'  # Tareas de Gradle a ejecutar, en este caso, ejecuta las pruebas unitarias.

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'  # Formato de los resultados de las pruebas.
    testResultsFiles: 'C:/TEST.xml'  # Ruta a los resultados de las pruebas JUnit.
    searchFolder: '$(System.DefaultWorkingDirectory)'  # Directorio de búsqueda de resultados.