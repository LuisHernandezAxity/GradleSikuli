# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- '*'

pool:
  #vmImage: 'windows-latest' # O el agente adecuado para tu proyecto
  name: 'TestSIkuliX'

#variables:
  # Define las variables de entorno necesarias para tu proyecto
  # Por ejemplo, JAVA_HOME y GRADLE_HOME
 # JAVA_HOME: '/usr/lib/jvm/zulu-11-azure-amd64'
 # GRADLE_HOME: '/opt/gradle/latest'
 # PATH: '$(JAVA_HOME)/bin:$(GRADLE_HOME)/bin:$(PATH)'

steps:
- script: |
    echo '##[section] Installing Gradle'
    curl -sL https://services.gradle.org/distributions/gradle-7.2-bin.zip -o gradle.zip
    unzip -q gradle.zip -d /opt/gradle
    rm gradle.zip
  displayName: 'Install Gradle'

- task: UseJavaVersion@0
  inputs:
    versionSpec: '11'
    addToPath: true
  displayName: 'Set Java version'

- script: |
    echo '##[section] Gradle Build'
    gradle build
  displayName: 'Build with Gradle'

- script: |
    echo '##[section] Running Tests'
    gradle test
  displayName: 'Run Tests'

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '**/build/test-results/test/*.xml'
  displayName: 'Publish Test Results'

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: 'build/libs'
    artifactName: 'drop'
  displayName: 'Publish Artifact'